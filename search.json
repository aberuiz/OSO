[{"path":"https://aberuiz.github.io/OSO/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Abraham Ruiz Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://aberuiz.github.io/OSO/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":". Maintainer.","code":""},{"path":"https://aberuiz.github.io/OSO/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ruiz (2024). OSO: BEA R Package. R package version 0.1.0, https://aberuiz.github.io/OSO/.","code":"@Manual{,   title = {OSO: BEA R Package},   author = {Abraham Ruiz},   year = {2024},   note = {R package version 0.1.0},   url = {https://aberuiz.github.io/OSO/}, }"},{"path":"https://aberuiz.github.io/OSO/index.html","id":"oso","dir":"","previous_headings":"","what":"BEA R Package","title":"BEA R Package","text":"goal OSO provide straightforward way reading data R Bureau Economic Analysis (BEA) improving discovery available data sets.","code":""},{"path":"https://aberuiz.github.io/OSO/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"BEA R Package","text":"can install development version OSO GitHub :","code":"#install.packages(\"remotes\") remotes::install_github(\"aberuiz/OSO\") #>  #> ── R CMD build ───────────────────────────────────────────────────────────────── #>      checking for file ‘/private/var/folders/gh/fbq3g2jj4h9b09knhwdpmxpc0000gn/T/RtmpZzEYtC/remotesb77157cbaa4a/aberuiz-OSO-0c932ec/DESCRIPTION’ ...  ✔  checking for file ‘/private/var/folders/gh/fbq3g2jj4h9b09knhwdpmxpc0000gn/T/RtmpZzEYtC/remotesb77157cbaa4a/aberuiz-OSO-0c932ec/DESCRIPTION’ #>   ─  preparing ‘OSO’: #>      checking DESCRIPTION meta-information ...  ✔  checking DESCRIPTION meta-information #>   ─  checking for LF line-endings in source and make files and shell scripts #>   ─  checking for empty or unneeded directories #>    Omitted ‘LazyData’ from DESCRIPTION #>   ─  building ‘OSO_0.1.0.tar.gz’ #>       #>  library(OSO)"},{"path":"https://aberuiz.github.io/OSO/index.html","id":"api-registration","dir":"","previous_headings":"","what":"API Registration","title":"BEA R Package","text":"Every function OSO require API key BEA. can register key BEA Website. saving API Key environment can use setbeaKey. permanently store BEA API Key .Renviron use argument ‘install = TRUE’. set key OSO automatically check key stored environment using getbeaKey make request. Use getbeaKey check BEA API Key stored. can overwrite existing key using argument ‘overwrite = TRUE’ setbeaKey.","code":"setbeaKey(APIkey = \"<Your 36 character API Key>\", install = TRUE)"},{"path":"https://aberuiz.github.io/OSO/index.html","id":"available-datasets","dir":"","previous_headings":"","what":"Available Datasets","title":"BEA R Package","text":"Use beaDatasetList view datasets available BEA API. Disclaimer writing, datasets can accessed OSO. Look list future development.","code":"beaDatasetList() #> # A tibble: 13 × 2 #>    DatasetName             DatasetDescription                                 #>    <chr>                   <chr>                                              #>  1 NIPA                    Standard NIPA tables                               #>  2 NIUnderlyingDetail      Standard NI underlying detail tables               #>  3 MNE                     Multinational Enterprises                          #>  4 FixedAssets             Standard Fixed Assets tables                       #>  5 ITA                     International Transactions Accounts                #>  6 IIP                     International Investment Position                  #>  7 InputOutput             Input-Output Data                                  #>  8 IntlServTrade           International Services Trade                       #>  9 IntlServSTA             International Services Supplied Through Affiliates #> 10 GDPbyIndustry           GDP by Industry                                    #> 11 Regional                Regional data sets                                 #> 12 UnderlyingGDPbyIndustry Underlying GDP by Industry                         #> 13 APIDatasetMetaData      Metadata about other API datasets"},{"path":"https://aberuiz.github.io/OSO/index.html","id":"finding-parameters--values","dir":"","previous_headings":"","what":"Finding Parameters & Values","title":"BEA R Package","text":"example, ’ll focus accessing ‘Regional’ dataset. making call using beaRegional may want look parameters necessary make request. Using beaParamList can get list parameters can use ‘Regional’ dataset. , returned parameters can use dataset. get available Values parameters can use beaParamValues. example ’ll look Real GDP Table Value : “CAGDP9” can get available linecodes ‘Regional’ dataset can run beaParamValues enter ‘linecode’ ParameterName. However, easier command beaParamValuesFiltered allows view linecodes table interest: “CAGDP9”","code":"beaParamList(   DatasetName = \"Regional\" ) #> # A tibble: 4 × 6 #>   ParameterName ParameterDataType ParameterDescription    ParameterIsRequiredF…¹ #>   <chr>         <chr>             <chr>                   <chr>                  #> 1 GeoFips       string            Comma-delimited list o… 1                      #> 2 LineCode      integer           Line code for a statis… 1                      #> 3 TableName     string            Regional income or pro… 1                      #> 4 Year          string            Comma-delimted list of… 0                      #> # ℹ abbreviated name: ¹​ParameterIsRequiredFlag #> # ℹ 2 more variables: MultipleAcceptedFlag <chr>, ParameterDefaultValue <chr> beaParamValues(   DatasetName = \"Regional\",   ParameterName = \"TableName\" ) #> # A tibble: 94 × 2 #>    Key      Desc                                                                 #>    <chr>    <chr>                                                                #>  1 CAEMP25N Total full-time and part-time employment by NAICS industry           #>  2 CAEMP25S Total full-time and part-time employment by SIC industry             #>  3 CAGDP1   County and MSA gross domestic product (GDP) summary                  #>  4 CAGDP11  Contributions to percent change in real GDP                          #>  5 CAGDP2   Gross domestic product (GDP) by county and metropolitan area         #>  6 CAGDP8   Chain-type quantity indexes for real GDP by county and metropolitan… #>  7 CAGDP9   Real GDP by county and metropolitan area                             #>  8 CAINC1   County and MSA personal income summary: personal income, population… #>  9 CAINC30  Economic profile                                                     #> 10 CAINC35  Personal current transfer receipts                                   #> # ℹ 84 more rows beaParamValuesFiltered(   DatasetName = \"Regional\",   TargetParameter = \"linecode\",   TableName = \"CAGDP9\" ) #> # A tibble: 34 × 2 #>    Key   Desc                                                                #>    <chr> <chr>                                                               #>  1 1     [CAGDP9] Real GDP: All industry total                               #>  2 10    [CAGDP9] Real GDP: Utilities (22)                                   #>  3 11    [CAGDP9] Real GDP: Construction (23)                                #>  4 12    [CAGDP9] Real GDP: Manufacturing (31-33)                            #>  5 13    [CAGDP9] Real GDP: Durable goods manufacturing (321,327-339)        #>  6 2     [CAGDP9] Real GDP: Private industries                               #>  7 25    [CAGDP9] Real GDP: Nondurable goods manufacturing (311-316,322-326) #>  8 3     [CAGDP9] Real GDP: Agriculture, forestry, fishing and hunting (11)  #>  9 34    [CAGDP9] Real GDP: Wholesale trade (42)                             #> 10 35    [CAGDP9] Real GDP: Retail trade (44-45)                             #> # ℹ 24 more rows"},{"path":"https://aberuiz.github.io/OSO/index.html","id":"making-the-request","dir":"","previous_headings":"","what":"Making the Request","title":"BEA R Package","text":"Now ready make call using beaRegional Real GDP Construction entire United States using geoFips code ‘00000’. Data Notes datasets include notes provided console. See request example.","code":"beaRegional(   TableName = \"CAGDP9\",   LineCode = 11,   GeoFips = \"00000\",   Year = 2022 ) #> Real GDP: Construction #> [1] \"For the All industry total and Government and government enterprises, the difference between the United States and Metropolitan and Nonmetropolitan portions reflects overseas activity, economic activity taking place outside the borders of the United States by the military and associated federal civilian support staff.\" #> [2] \"Metropolitan Areas are defined (geographically delineated) by the Office of Management and Budget (OMB) bulletin no. 20-01 issued March 6, 2020.\"                                                                                                                                                                                #> [3] \"Last updated: December 7, 2023 -- new statistics for 2022, revised statistics for 2017-2021.\" #> # A tibble: 1 × 8 #>   Code      GeoFips GeoName   TimePeriod CL_UNIT UNIT_MULT Real_GDP_Construction #>   <chr>     <chr>   <chr>     <chr>      <chr>   <chr>                     <dbl> #> 1 CAGDP9-11 00000   United S… 2022       Thousa… 3                     827768000 #> # ℹ 1 more variable: NoteRef <chr>"},{"path":"https://aberuiz.github.io/OSO/index.html","id":"multiple-values","dir":"","previous_headings":"","what":"Multiple Values","title":"BEA R Package","text":"‘Regional’ datasets able request multiple returns parameters ‘GeoFips’ ‘Year’. must insert values comma-delimited string. requesting available years can also insert ‘’.","code":"beaRegional(   TableName = \"CAGDP9\",   LineCode = 11,   GeoFips = \"00000, 48000\",   Year = \"ALL\" ) #> Real GDP: Construction #> [1] \"For the All industry total and Government and government enterprises, the difference between the United States and Metropolitan and Nonmetropolitan portions reflects overseas activity, economic activity taking place outside the borders of the United States by the military and associated federal civilian support staff.\" #> [2] \"Metropolitan Areas are defined (geographically delineated) by the Office of Management and Budget (OMB) bulletin no. 20-01 issued March 6, 2020.\"                                                                                                                                                                                #> [3] \"Last updated: December 7, 2023 -- new statistics for 2022, revised statistics for 2017-2021.\" #> # A tibble: 12 × 8 #>    Code      GeoFips GeoName  TimePeriod CL_UNIT UNIT_MULT Real_GDP_Construction #>    <chr>     <chr>   <chr>    <chr>      <chr>   <chr>                     <dbl> #>  1 CAGDP9-11 00000   United … 2017       Thousa… 3                     840220000 #>  2 CAGDP9-11 00000   United … 2018       Thousa… 3                     863755000 #>  3 CAGDP9-11 00000   United … 2019       Thousa… 3                     882046000 #>  4 CAGDP9-11 00000   United … 2020       Thousa… 3                     856487000 #>  5 CAGDP9-11 00000   United … 2021       Thousa… 3                     888104000 #>  6 CAGDP9-11 00000   United … 2022       Thousa… 3                     827768000 #>  7 CAGDP9-11 48000   Texas    2017       Thousa… 3                      88478080 #>  8 CAGDP9-11 48000   Texas    2018       Thousa… 3                      87963012 #>  9 CAGDP9-11 48000   Texas    2019       Thousa… 3                      90383450 #> 10 CAGDP9-11 48000   Texas    2020       Thousa… 3                      87536636 #> 11 CAGDP9-11 48000   Texas    2021       Thousa… 3                      88865961 #> 12 CAGDP9-11 48000   Texas    2022       Thousa… 3                      83697711 #> # ℹ 1 more variable: NoteRef <chr>"},{"path":"https://aberuiz.github.io/OSO/index.html","id":"in-development","dir":"","previous_headings":"","what":"In Development","title":"BEA R Package","text":"Improvements MNE Addition IntlServTrade Addition IntlServSTA Allow XML Responses","code":""},{"path":"https://aberuiz.github.io/OSO/reference/OSO-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OSO: BEA R Package — OSO-package","title":"OSO: BEA R Package — OSO-package","text":"Make Requests Bureau Economic Analysis API","code":""},{"path":[]},{"path":"https://aberuiz.github.io/OSO/reference/beaDatasetList.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve List of Available Datasets from Bureau of Economic Analysis (BEA) API — beaDatasetList","title":"Retrieve List of Available Datasets from Bureau of Economic Analysis (BEA) API — beaDatasetList","text":"function retrieves list available datasets Bureau Economic Analysis (BEA) API. requires valid API key can return results different formats.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaDatasetList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve List of Available Datasets from Bureau of Economic Analysis (BEA) API — beaDatasetList","text":"","code":"beaDatasetList(ResultFormat = \"json\", beaKey = NULL)"},{"path":"https://aberuiz.github.io/OSO/reference/beaDatasetList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve List of Available Datasets from Bureau of Economic Analysis (BEA) API — beaDatasetList","text":"ResultFormat character string specifying desired format results. Default \"json\". possible values may include \"xml\" (check BEA API documentation options). beaKey character string containing BEA API key. NULL (default), function attempt retrieve key using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaDatasetList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve List of Available Datasets from Bureau of Economic Analysis (BEA) API — beaDatasetList","text":"ResultFormat \"json\", returns tibble (data frame) containing information available datasets.   formats, returns raw API response.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaDatasetList.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve List of Available Datasets from Bureau of Economic Analysis (BEA) API — beaDatasetList","text":"Bureau Economic Analysis (BEA) API: https://apps.bea.gov/API/docs/index.htm","code":""},{"path":[]},{"path":"https://aberuiz.github.io/OSO/reference/beaDatasetList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve List of Available Datasets from Bureau of Economic Analysis (BEA) API — beaDatasetList","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve dataset list using default JSON format datasets <- beaDatasetList()  # Retrieve dataset list using a specific API key datasets <- beaDatasetList(beaKey = \"YOUR-API-KEY-HERE\")  # Retrieve dataset list in XML format datasets_xml <- beaDatasetList(ResultFormat = \"xml\") } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaFixedAssets.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Fixed Assets Data from the Bureau of Economic Analysis (BEA) API — beaFixedAssets","title":"Retrieve Fixed Assets Data from the Bureau of Economic Analysis (BEA) API — beaFixedAssets","text":"function fetches fixed assets data BEA API based specified parameters.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaFixedAssets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Fixed Assets Data from the Bureau of Economic Analysis (BEA) API — beaFixedAssets","text":"","code":"beaFixedAssets(TableName = \"\", Year = \"\", ResultFormat = \"json\", beaKey = NULL)"},{"path":"https://aberuiz.github.io/OSO/reference/beaFixedAssets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Fixed Assets Data from the Bureau of Economic Analysis (BEA) API — beaFixedAssets","text":"TableName character string specifying table name fixed assets data. Year character string specifying year(s) retrieve data. ResultFormat character string specifying format results. Default \"json\". beaKey optional character string containing BEA API key. NULL, function attempt retrieve key using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaFixedAssets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Fixed Assets Data from the Bureau of Economic Analysis (BEA) API — beaFixedAssets","text":"tibble containing retrieved fixed assets data. error occurs, returns tibble error information.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaFixedAssets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Fixed Assets Data from the Bureau of Economic Analysis (BEA) API — beaFixedAssets","text":"function requires valid BEA API key. provided, attempts retrieve one using `getbeaKey()`. API key invalid, warning issued error message returned.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaFixedAssets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Fixed Assets Data from the Bureau of Economic Analysis (BEA) API — beaFixedAssets","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch fixed assets data for a specific table and year data <- beaFixedAssets(TableName = \"FAAt201\", Year = 2020)  # Fetch data with a custom API key data <- beaFixedAssets(TableName = \"FAAt201\", Year = \"2019-2020\", beaKey = \"your-api-key-here\") } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaGDPbyIndustry.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve GDP by Industry data from the Bureau of Economic Analysis (BEA) API — beaGDPbyIndustry","title":"Retrieve GDP by Industry data from the Bureau of Economic Analysis (BEA) API — beaGDPbyIndustry","text":"function fetches GDP Industry data BEA API based specified parameters.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaGDPbyIndustry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve GDP by Industry data from the Bureau of Economic Analysis (BEA) API — beaGDPbyIndustry","text":"","code":"beaGDPbyIndustry(   TableID = \"\",   Industry = \"\",   Frequency = \"\",   Year = \"\",   ResultFormat = \"json\",   beaKey = NULL )"},{"path":"https://aberuiz.github.io/OSO/reference/beaGDPbyIndustry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve GDP by Industry data from the Bureau of Economic Analysis (BEA) API — beaGDPbyIndustry","text":"TableID Character string specifying desired table ID. Industry Character string specifying industry code. Frequency Character string specifying frequency data (e.g., \"\" annual, \"Q\" quarterly). Year Character string specifying year(s) data requested. ResultFormat Character string specifying format results (default \"json\"). beaKey Character string containing BEA API key. NULL, function attempt retrieve using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaGDPbyIndustry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve GDP by Industry data from the Bureau of Economic Analysis (BEA) API — beaGDPbyIndustry","text":"data frame containing requested GDP Industry data. error occurs, returns error message.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaGDPbyIndustry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve GDP by Industry data from the Bureau of Economic Analysis (BEA) API — beaGDPbyIndustry","text":"function requires valid BEA API key. provided, attempts retrieve key using `getbeaKey()`. function display warning return error message API key invalid.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaGDPbyIndustry.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve GDP by Industry data from the Bureau of Economic Analysis (BEA) API — beaGDPbyIndustry","text":"function prints statistic description notes returned API.","code":""},{"path":[]},{"path":"https://aberuiz.github.io/OSO/reference/beaGDPbyIndustry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve GDP by Industry data from the Bureau of Economic Analysis (BEA) API — beaGDPbyIndustry","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch annual GDP data for all industries in 2022 data <- beaGDPbyIndustry(TableID = \"1\", Industry = \"ALL\", Frequency = \"A\", Year = \"2022\") } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaInOut.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Input-Output Data from the Bureau of Economic Analysis (BEA) API — beaInOut","title":"Retrieve Input-Output Data from the Bureau of Economic Analysis (BEA) API — beaInOut","text":"function fetches Input-Output data BEA API specified table year.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaInOut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Input-Output Data from the Bureau of Economic Analysis (BEA) API — beaInOut","text":"","code":"beaInOut(TableID = \"\", Year = \"\", ResultFormat = \"json\", beaKey = NULL)"},{"path":"https://aberuiz.github.io/OSO/reference/beaInOut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Input-Output Data from the Bureau of Economic Analysis (BEA) API — beaInOut","text":"TableID character string specifying ID table retrieve. Year character string specifying year retrieve data. ResultFormat character string specifying format results. Default \"json\". beaKey optional character string containing BEA API key. NULL, function attempt retrieve key using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaInOut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Input-Output Data from the Bureau of Economic Analysis (BEA) API — beaInOut","text":"data frame containing requested Input-Output data. error occurs, returns data frame error information.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaInOut.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Input-Output Data from the Bureau of Economic Analysis (BEA) API — beaInOut","text":"function requires valid BEA API key. provided, attempts retrieve one using getbeaKey(). function issue warning API key invalid API request results error.","code":""},{"path":[]},{"path":"https://aberuiz.github.io/OSO/reference/beaInOut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Input-Output Data from the Bureau of Economic Analysis (BEA) API — beaInOut","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve data for a specific table and year data <- beaInOut(TableID = \"59\", Year = \"2022\")  # Use a specific API key data <- beaInOut(TableID = \"262\", Year = \"2022\", beaKey = \"YOUR_API_KEY\") } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPA.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve NIPA (National Income and Product Accounts) Data from BEA API — beaNIPA","title":"Retrieve NIPA (National Income and Product Accounts) Data from BEA API — beaNIPA","text":"function fetches NIPA data Bureau Economic Analysis (BEA) API.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve NIPA (National Income and Product Accounts) Data from BEA API — beaNIPA","text":"","code":"beaNIPA(   TableName = \"\",   Frequency = \"\",   Year = \"\",   ShowMillions = \"N\",   ResultFormat = \"json\",   beaKey = NULL )"},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve NIPA (National Income and Product Accounts) Data from BEA API — beaNIPA","text":"TableName character string specifying NIPA table name. Frequency character string indicating frequency data (e.g., \"\" annual, \"Q\" quarterly). Year character string specifying year(s) retrieve data. ShowMillions character string, either \"Y\" \"N\", display values millions (default \"N\"). ResultFormat character string specifying format result (default \"json\"). beaKey optional character string BEA API key. NULL, function attempt retrieve using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve NIPA (National Income and Product Accounts) Data from BEA API — beaNIPA","text":"dataframe containing requested NIPA data.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve NIPA (National Income and Product Accounts) Data from BEA API — beaNIPA","text":"function makes API call BEA retrieve NIPA data based specified parameters. API key provided, attempts retrieve one using `getbeaKey()`. function display warning return error message API key invalid.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPA.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve NIPA (National Income and Product Accounts) Data from BEA API — beaNIPA","text":"Users need register BEA API key https://apps.bea.gov/API/signup/ store using `setbeaKey()` seamless usage.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve NIPA (National Income and Product Accounts) Data from BEA API — beaNIPA","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve annual data for Table 1.1.5 for the year 2022 data <- beaNIPA(TableName = \"T10105\", Frequency = \"A\", Year = \"2022\") } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPADetails.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve NIPA (National Income and Product Accounts) Details from BEA API — beaNIPADetails","title":"Retrieve NIPA (National Income and Product Accounts) Details from BEA API — beaNIPADetails","text":"function fetches NIPA details Bureau Economic Analysis (BEA) API","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPADetails.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve NIPA (National Income and Product Accounts) Details from BEA API — beaNIPADetails","text":"","code":"beaNIPADetails(   TableName = \"\",   Frequency = \"\",   Year = \"\",   ResultFormat = \"json\",   beaKey = NULL )"},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPADetails.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve NIPA (National Income and Product Accounts) Details from BEA API — beaNIPADetails","text":"TableName character string specifying NIPA table name. Frequency character string indicating frequency data (e.g., \"\" annual, \"Q\" quarterly). Year character string numeric value representing year(s) data requested. ResultFormat character string specifying format result. Default \"json\". beaKey optional character string containing BEA API key. NULL, function attempt retrieve using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPADetails.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve NIPA (National Income and Product Accounts) Details from BEA API — beaNIPADetails","text":"dataframe containing requested NIPA data.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPADetails.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve NIPA (National Income and Product Accounts) Details from BEA API — beaNIPADetails","text":"function requires valid BEA API key. provided, attempts retrieve one using `getbeaKey()`. Users can register API key https://apps.bea.gov/API/signup/","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaNIPADetails.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve NIPA (National Income and Product Accounts) Details from BEA API — beaNIPADetails","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch annual data for a specific table and year data <- beaNIPADetails(TableName = \"T10101\", Frequency = \"A\", Year = \"2022\")  # Fetch quarterly data for a specific table and multiple years data <- beaNIPADetails(TableName = \"T10101\", Frequency = \"Q\", Year = \"2021,2022\") } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaParamList.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve dataset parameters BEA — beaParamList","title":"Retrieve dataset parameters BEA — beaParamList","text":"function returns data frame containing required optional parameters specified dataset Bureau Economic Analysis (BEA) API.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve dataset parameters BEA — beaParamList","text":"","code":"beaParamList(DatasetName = \"\", ..., ResultFormat = \"json\", beaKey = NULL)"},{"path":"https://aberuiz.github.io/OSO/reference/beaParamList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve dataset parameters BEA — beaParamList","text":"DatasetName character string specifying name dataset. ... Additional arguments passed function (currently unused). ResultFormat character string specifying format result. Currently, \"json\" supported. Defaults \"json\". beaKey character string containing BEA API key. NULL (default), function attempt retrieve key using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve dataset parameters BEA — beaParamList","text":"dataframe containing required optional parameters   specified dataset. error occurs, returns error message.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve dataset parameters BEA — beaParamList","text":"function interacts BEA API retrieve parameter information specified dataset. requires valid BEA API key, can obtained https://apps.bea.gov/API/signup/ API key provided, function attempts retrieve one using `getbeaKey()`. Ensure set API key using `setbeaKey()` running function without explicitly providing key.","code":""},{"path":[]},{"path":"https://aberuiz.github.io/OSO/reference/beaParamList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve dataset parameters BEA — beaParamList","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve parameters for the Regional dataset regional_params <- beaParamList(DatasetName = \"Regional\")  # Using a specific API key params <- beaParamList(DatasetName = \"NIPA\", beaKey = \"YOUR-API-KEY-HERE\") } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameter Values for BEA Dataset — beaParamValues","title":"Get Parameter Values for BEA Dataset — beaParamValues","text":"Retrieves data frame available values specified parameter within given Bureau Economic Analysis (BEA) dataset.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameter Values for BEA Dataset — beaParamValues","text":"","code":"beaParamValues(   DatasetName = \"\",   ParameterName = \"\",   ResultFormat = \"json\",   beaKey = NULL )"},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameter Values for BEA Dataset — beaParamValues","text":"DatasetName character. name BEA dataset query. ParameterName character. name parameter retrieve values. ResultFormat character. format API response. Currently \"json\" supported. Default \"json\". beaKey character. Optional. BEA API key. NULL (default), retrieved using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameter Values for BEA Dataset — beaParamValues","text":"data frame containing available values specified parameter given dataset.         error occurs, returns data frame error information.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Parameter Values for BEA Dataset — beaParamValues","text":"function interacts BEA API fetch parameter values specified dataset. requires valid BEA API key, can set using `setbeaKey()` function provided directly argument.","code":""},{"path":[]},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Parameter Values for BEA Dataset — beaParamValues","text":"","code":"# Get table names for the Regional dataset beaParamValues(DatasetName = \"Regional\", ParameterName = \"TableName\") #> Error in if (nchar(beaKey) != 36) {    warning(paste0(\"Invalid API Key: \", beaKey, \" Register <https://apps.bea.gov/API/signup/> Store with `setbeaKey`\"))    return(paste0(\"Invalid API Key: \", beaKey, \" Register <https://apps.bea.gov/API/signup/> Store with `setbeaKey`\"))}: argument is of length zero  # Get available FIPS codes for the Regional dataset beaParamValues(DatasetName = \"Regional\", ParameterName = \"GeoFips\") #> Error in if (nchar(beaKey) != 36) {    warning(paste0(\"Invalid API Key: \", beaKey, \" Register <https://apps.bea.gov/API/signup/> Store with `setbeaKey`\"))    return(paste0(\"Invalid API Key: \", beaKey, \" Register <https://apps.bea.gov/API/signup/> Store with `setbeaKey`\"))}: argument is of length zero"},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValuesFiltered.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter and retrieve parameter values from BEA datasets — beaParamValuesFiltered","title":"Filter and retrieve parameter values from BEA datasets — beaParamValuesFiltered","text":"function queries Bureau Economic Analysis (BEA) API retrieve filtered set parameter values specified dataset. allows filtering based table name line code.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValuesFiltered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter and retrieve parameter values from BEA datasets — beaParamValuesFiltered","text":"","code":"beaParamValuesFiltered(   DatasetName = \"\",   TargetParameter = \"\",   TableName = \"\",   LineCode = \"\",   ResultFormat = \"json\",   beaKey = NULL )"},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValuesFiltered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter and retrieve parameter values from BEA datasets — beaParamValuesFiltered","text":"DatasetName Character string. name BEA dataset query (e.g., \"Regional\"). TargetParameter Character string. name parameter retrieve values. TableName Character string. Optional. Specific BEA table name filter results. LineCode Character string. Optional. Specific line code filter results. ResultFormat Character string. format API response. Currently supports \"json\". beaKey Character string. Optional. BEA API key. provided, retrieved environment.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValuesFiltered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter and retrieve parameter values from BEA datasets — beaParamValuesFiltered","text":"data frame containing filtered parameter values specified dataset criteria.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValuesFiltered.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter and retrieve parameter values from BEA datasets — beaParamValuesFiltered","text":"function interacts BEA API retrieve filtered parameter values. requires valid BEA API key, can obtained https://apps.bea.gov/API/signup/. API key can provided directly function set environment using `setbeaKey` function. error occurs API request, function return data frame error information.","code":""},{"path":[]},{"path":"https://aberuiz.github.io/OSO/reference/beaParamValuesFiltered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter and retrieve parameter values from BEA datasets — beaParamValuesFiltered","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve filtered line codes for the Regional dataset, table CAGDP9 result <- beaParamValuesFiltered(   DatasetName = \"Regional\",   TargetParameter = \"LineCode\",   TableName = \"CAGDP9\" )  # Retrieve parameter values with additional line code filter result <- beaParamValuesFiltered(   DatasetName = \"Regional\",   TargetParameter = \"GeoFips\",   TableName = \"CAGDP2\",   LineCode = \"1\" ) } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaRegional.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Regional BEA Tables — beaRegional","title":"Retrieve Regional BEA Tables — beaRegional","text":"function fetches data Regional BEA Tables. allows users specify table names, line codes, geographic areas, years need data. Table names line codes can discovered using `beaParamValues` function.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaRegional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Regional BEA Tables — beaRegional","text":"","code":"beaRegional(   TableName = \"\",   LineCode = \"\",   GeoFips = \"\",   Year = \"\",   ResultFormat = \"json\",   beaKey = NULL )"},{"path":"https://aberuiz.github.io/OSO/reference/beaRegional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Regional BEA Tables — beaRegional","text":"TableName character. Specific table value request (e.g., \"CAGDP9\"). LineCode numeric character. Specific line specified table request. GeoFips character. Geographic area(s) requested data. Use FIPS codes. Year numeric character. Year(s) data requested. ResultFormat character. Format returned data. Currently \"json\" supported. beaKey character. BEA API key. NULL, searches key system environment.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaRegional.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Regional BEA Tables — beaRegional","text":"data frame containing requested BEA data following columns: GeoFips: Geographic FIPS code GeoName: Name geographic area Code: Line code TimePeriod: Year data CL_UNIT: Classification unit UNIT_MULT: Unit multiplier DataValue: actual data value (numeric) [Statistic]: name statistic (column name varies)","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaRegional.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve Regional BEA Tables — beaRegional","text":"- function display message statistic name print notes returned API. - error occurs, function return error information data frame.","code":""},{"path":[]},{"path":"https://aberuiz.github.io/OSO/reference/beaRegional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Regional BEA Tables — beaRegional","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch GDP data for the entire United States in 2022 gdp_data <- beaRegional(   TableName = \"CAGDP9\",   LineCode = 11,   GeoFips = \"00000\",   Year = 2022 )  # Fetch data for multiple years multi_year_data <- beaRegional(   TableName = \"CAGDP9\",   LineCode = 11,   GeoFips = \"00000\",   Year = \"2020,2021,2022\" ) } # }"},{"path":"https://aberuiz.github.io/OSO/reference/beaUnderlyingGDPbyIndustry.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Underlying GDP by Industry Data from BEA API — beaUnderlyingGDPbyIndustry","title":"Fetch Underlying GDP by Industry Data from BEA API — beaUnderlyingGDPbyIndustry","text":"function retrieves Underlying GDP Industry data Bureau Economic Analysis (BEA) API.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaUnderlyingGDPbyIndustry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Underlying GDP by Industry Data from BEA API — beaUnderlyingGDPbyIndustry","text":"","code":"beaUnderlyingGDPbyIndustry(   TableID = \"\",   Industry = \"\",   Year = \"\",   ResultFormat = \"json\",   beaKey = NULL )"},{"path":"https://aberuiz.github.io/OSO/reference/beaUnderlyingGDPbyIndustry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Underlying GDP by Industry Data from BEA API — beaUnderlyingGDPbyIndustry","text":"TableID character string specifying TableID desired data. Industry character string specifying Industry code. Year Year data requested. ResultFormat Default \"json\". beaKey character string containing BEA API key. NULL, function attempt retrieve using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaUnderlyingGDPbyIndustry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Underlying GDP by Industry Data from BEA API — beaUnderlyingGDPbyIndustry","text":"data frame containing requested Underlying GDP Industry data.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaUnderlyingGDPbyIndustry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch Underlying GDP by Industry Data from BEA API — beaUnderlyingGDPbyIndustry","text":"function makes request BEA API fetch Underlying GDP Industry data. requires valid BEA API key, can obtained https://apps.bea.gov/API/signup/. API key provided, function attempts retrieve using `getbeaKey()`.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaUnderlyingGDPbyIndustry.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fetch Underlying GDP by Industry Data from BEA API — beaUnderlyingGDPbyIndustry","text":"function display warning message invalid API key used. also prints statistic description notes returned API.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/beaUnderlyingGDPbyIndustry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Underlying GDP by Industry Data from BEA API — beaUnderlyingGDPbyIndustry","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch data for a specific industry and year data <- beaUnderlyingGDPbyIndustry(TableID = \"1\", Industry = \"11\", Year = \"2022\") } # }"},{"path":"https://aberuiz.github.io/OSO/reference/getbeaKey.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve BEA API Key — getbeaKey","title":"Retrieve BEA API Key — getbeaKey","text":"function attempts retrieve Bureau Economic Analysis (BEA) API key set system environment. used authenticate requests BEA API accessing economic data.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/getbeaKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve BEA API Key — getbeaKey","text":"","code":"getbeaKey()"},{"path":"https://aberuiz.github.io/OSO/reference/getbeaKey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve BEA API Key — getbeaKey","text":"Returns character string containing BEA API key set environment. key set NA, function returns NULL.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/setbeaKey.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a BEA API key — setbeaKey","title":"Set a BEA API key — setbeaKey","text":"Set Bureau Economic Analysis (BEA) API key data requests. key can set current session installed permanently user's .Renviron file.","code":""},{"path":"https://aberuiz.github.io/OSO/reference/setbeaKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a BEA API key — setbeaKey","text":"","code":"setbeaKey(APIkey, install = FALSE, overwrite = FALSE)"},{"path":"https://aberuiz.github.io/OSO/reference/setbeaKey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a BEA API key — setbeaKey","text":"APIkey 36-character string provided bea.gov install Logical; TRUE, API key saved .Renviron future sessions overwrite Logical; TRUE, overwrites existing BEA API key .Renviron","code":""},{"path":"https://aberuiz.github.io/OSO/reference/setbeaKey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a BEA API key — setbeaKey","text":"Invisibly returns BEA API key","code":""},{"path":"https://aberuiz.github.io/OSO/reference/setbeaKey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a BEA API key — setbeaKey","text":"","code":"if (FALSE) { # \\dontrun{ setbeaKey(\"your-36-character-api-key-here\") setbeaKey(\"your-36-character-api-key-here\", install = TRUE) } # }"}]
